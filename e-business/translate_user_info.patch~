diff --git a/BookShop/AdminAuthors.aspx b/BookShop/AdminAuthors.aspx
new file mode 100644
index 0000000..45b2e70
--- /dev/null
+++ b/BookShop/AdminAuthors.aspx
@@ -0,0 +1,29 @@
+﻿<%@ Page Title="" Language="C#" MasterPageFile="~/Admin.master" AutoEventWireup="true" CodeFile="AdminAuthors.aspx.cs" Inherits="AdminAuthors" %>
+
+<asp:Content ID="Content1" ContentPlaceHolderID="titlePlaceHolder" runat="Server">
+  <span class="AdminTitle">
+    Магазин за книги :: Администраторкса част
+    <br />
+    Автори
+  </span>
+</asp:Content>
+<asp:Content ID="Content2" ContentPlaceHolderID="adminPlaceHolder" Runat="Server">
+  <p>
+    <asp:Label ID="statusLabel" runat="server" Text=""></asp:Label>
+  </p>
+  <asp:GridView ID="grid" runat="server" DataKeyNames="AuthorID"
+    AutoGenerateColumns="False" Width="100%" 
+    onrowcancelingedit="grid_RowCancelingEdit" onrowdeleting="grid_RowDeleting" 
+    onrowediting="grid_RowEditing" onrowupdating="grid_RowUpdating">
+    <Columns>
+      <asp:BoundField DataField="Name" HeaderText="Име на автор" SortExpression="Name" />
+      <asp:CommandField ShowEditButton="True" />
+      <asp:ButtonField CommandName="Delete" Text="Изтрий" />
+    </Columns>
+  </asp:GridView>
+  <p>Добавяне на нов автор:</p>
+  <p>Име:</p>
+  <asp:TextBox ID="newName" runat="server" Width="400px" />
+  <p><asp:Button ID="createAuthor" Text="Създай" runat="server" 
+      onclick="createAuthor_Click" /></p>
+</asp:Content>
diff --git a/BookShop/AdminAuthors.aspx.cs b/BookShop/AdminAuthors.aspx.cs
new file mode 100644
index 0000000..f364c70
--- /dev/null
+++ b/BookShop/AdminAuthors.aspx.cs
@@ -0,0 +1,93 @@
+﻿using System;
+using System.Collections.Generic;
+using System.Linq;
+using System.Web;
+using System.Web.UI;
+using System.Web.UI.WebControls;
+
+public partial class AdminAuthors : System.Web.UI.Page
+{
+  protected void Page_Load(object sender, EventArgs e)
+  {
+    // Load the grid only the first time the page is loaded
+    if (!Page.IsPostBack)
+    {
+      // Load the categories grid
+      BindGrid();
+    }
+  }
+
+  // Populate the GridView with data
+  private void BindGrid()
+  {
+    // Get a DataTable object containing the categories
+    grid.DataSource = CatalogAccess.GetAuthors();
+    // Bind the data grid to the data source
+    grid.DataBind();
+  }
+
+  // Enter row into edit mode
+  protected void grid_RowEditing(object sender, GridViewEditEventArgs e)
+  {
+    // Set the row for which to enable edit mode
+    grid.EditIndex = e.NewEditIndex;
+    // Set status message 
+    statusLabel.Text = "Редактиране на ред номер " + e.NewEditIndex.ToString();
+    // Reload the grid
+    BindGrid();
+  }
+
+  // Cancel edit mode
+  protected void grid_RowCancelingEdit(object sender,
+  GridViewCancelEditEventArgs e)
+  {
+    // Cancel edit mode
+    grid.EditIndex = -1;
+    // Set status message
+    statusLabel.Text = "Редактирането отменено";
+    // Reload the grid
+    BindGrid();
+  }
+
+  // Update row
+  protected void grid_RowUpdating(object sender, GridViewUpdateEventArgs e)
+  {
+    // Retrieve updated data
+    string id = grid.DataKeys[e.RowIndex].Value.ToString();
+    string name = ((TextBox)grid.Rows[e.RowIndex].Cells[0].Controls[0]).Text;
+    // Execute the update command
+    bool success = CatalogAccess.UpdateAuthor(id, name);
+    // Cancel edit mode
+    grid.EditIndex = -1;
+    // Display status message
+    statusLabel.Text = success ? "Обновяването успешно" : "Обновяването неуспешно";
+    // Reload the grid
+    BindGrid();
+  }
+
+  // Delete a record
+  protected void grid_RowDeleting(object sender, GridViewDeleteEventArgs e)
+  {
+    // Get the ID of the record to be deleted
+    string id = grid.DataKeys[e.RowIndex].Value.ToString();
+    // Execute the delete command
+    bool success = CatalogAccess.DeleteAuthor(id);
+    // Cancel edit mode
+    grid.EditIndex = -1;
+    // Display status message
+    statusLabel.Text = success ? "Изтриването успешно" : "Изтриването неуспешно" ;
+    // Reload the grid
+    BindGrid();
+  }
+
+  // Create a new category
+  protected void createAuthor_Click(object sender, EventArgs e)
+  {
+    // Execute the insert command
+    bool success = CatalogAccess.CreateAuthor(newName.Text);
+    // Display results
+    statusLabel.Text = success ? "Добавянето успешно" : "Добавянето неуспешно" ;
+    // Reload the grid
+    BindGrid();
+  }
+}
diff --git a/BookShop/AdminDepartments.aspx b/BookShop/AdminDepartments.aspx
index 78b6d51..9716441 100644
--- a/BookShop/AdminDepartments.aspx
+++ b/BookShop/AdminDepartments.aspx
@@ -42,6 +42,6 @@
   <asp:TextBox ID="newName" runat="server" Width="400px" />
   <p>Описание:</p>
   <asp:TextBox ID="newDescription" runat="server" Width="400px" Height="70px" TextMode="MultiLine" />
-  <p><asp:Button ID="createDepartment" Text="Create Department" runat="server" 
+  <p><asp:Button ID="createDepartment" Text="Създай" runat="server" 
       onclick="createDepartment_Click" /></p>
 </asp:Content>
diff --git a/BookShop/AdminProductDetails.aspx.cs b/BookShop/AdminProductDetails.aspx.cs
index ccca43c..a90dfb1 100644
--- a/BookShop/AdminProductDetails.aspx.cs
+++ b/BookShop/AdminProductDetails.aspx.cs
@@ -180,8 +180,8 @@ public partial class AdminProductDetails : System.Web.UI.Page
         image1FileUpload.SaveAs(location);
         // update database with new product details
         ProductDetails pd = CatalogAccess.GetProductDetails(currentProductId);
-        CatalogAccess.UpdateProduct(currentProductId, pd.Name, pd.Description, pd.Price.ToString(), fileName, pd.Image, pd.PromoDept.ToString(), pd.PromoFront.ToString());
-        // reload the page 
+        CatalogAccess.UpdateProduct(currentProductId, pd.Name, pd.AuthorName, pd.Description, pd.Price.ToString(), fileName, pd.Image, pd.PromoDept.ToString(), pd.PromoFront.ToString());
+        // reload the page
         Response.Redirect("AdminProductDetails.aspx" +
                 "?DepartmentID=" + currentDepartmentId +
                 "&CategoryID=" + currentCategoryId +
@@ -189,7 +189,7 @@ public partial class AdminProductDetails : System.Web.UI.Page
       }
       catch
       {
-        statusLabel.Text = "Грешка при качването на Изображение 1";
+        statusLabel.Text = "Грешка при качването на Изображение 1" + e.ToString();
       }
     }
   }
@@ -208,7 +208,7 @@ public partial class AdminProductDetails : System.Web.UI.Page
         image2FileUpload.SaveAs(location);
         // update database with new product details
         ProductDetails pd = CatalogAccess.GetProductDetails(currentProductId);
-        CatalogAccess.UpdateProduct(currentProductId, pd.Name, pd.Description, pd.Price.ToString(), pd.Thumbnail, fileName,pd.PromoDept.ToString(), pd.PromoFront.ToString());
+        CatalogAccess.UpdateProduct(currentProductId, pd.Name, pd.AuthorName, pd.Description, pd.Price.ToString(), pd.Thumbnail, fileName,pd.PromoDept.ToString(), pd.PromoFront.ToString());
         // reload the page 
         Response.Redirect("AdminProductDetails.aspx" +
                 "?DepartmentID=" + currentDepartmentId +
diff --git a/BookShop/AdminProducts.aspx b/BookShop/AdminProducts.aspx
index cd1edbf..0bb848f 100644
--- a/BookShop/AdminProducts.aspx
+++ b/BookShop/AdminProducts.aspx
@@ -32,6 +32,18 @@
           <asp:Label ID="Label1" runat="server" Text='<%# Bind("Name") %>'></asp:Label>
         </ItemTemplate>
       </asp:TemplateField>
+
+    <asp:TemplateField HeaderText="Име на автора" SortExpression="AuthorName">
+        <EditItemTemplate>
+          <asp:TextBox ID="authorNameTextBox" runat="server" Width="97%" 
+                       CssClass="GridEditingRow" Text='<%# Bind("AuthorName") %>'>
+          </asp:TextBox>
+        </EditItemTemplate>
+        <ItemTemplate>
+          <asp:Label ID="Label1" runat="server" Text='<%# Bind("AuthorName") %>'></asp:Label>
+        </ItemTemplate>
+      </asp:TemplateField>
+
       <asp:TemplateField HeaderText="Product Description" 
         SortExpression="Description">
         <EditItemTemplate>
@@ -100,6 +112,10 @@
     <asp:TextBox ID="newName" runat="server" Width="400px" />
   </p>
   <p>
+    <span class="WideLabel">Автор:</span>
+    <asp:TextBox ID="authorName" runat="server" Width="400px" />
+  </p>
+  <p>
     <span class="WideLabel">Описание:</span>
     <asp:TextBox ID="newDescription" runat="server" Width="400px"
                  Height="70px" TextMode="MultiLine" />
@@ -123,7 +139,7 @@
   <p>
     <span class="widelabel">Промоция на първа страница:</span>
     <asp:CheckBox ID="newPromoFront" runat="server" />
-  </p>  
+  </p>
   <asp:Button ID="createProduct" runat="server" Text="Create Product" 
     onclick="createProduct_Click" />
 </asp:Content>
diff --git a/BookShop/AdminProducts.aspx.cs b/BookShop/AdminProducts.aspx.cs
index f762606..5814749 100644
--- a/BookShop/AdminProducts.aspx.cs
+++ b/BookShop/AdminProducts.aspx.cs
@@ -72,10 +72,11 @@ public partial class AdminProducts : System.Web.UI.Page
       string price = ((TextBox)grid.Rows[e.RowIndex].FindControl("priceTextBox")).Text;
       string thumbnail = ((TextBox)grid.Rows[e.RowIndex].FindControl("thumbTextBox")).Text;
       string image = ((TextBox)grid.Rows[e.RowIndex].FindControl("imageTextBox")).Text;
-      string promoDept = ((CheckBox)grid.Rows[e.RowIndex].Cells[6].Controls[0]).Checked.ToString();
-      string promoFront = ((CheckBox)grid.Rows[e.RowIndex].Cells[7].Controls[0]).Checked.ToString();
+      string promoDept = ((CheckBox)grid.Rows[e.RowIndex].Cells[7].Controls[0]).Checked.ToString();
+      string promoFront = ((CheckBox)grid.Rows[e.RowIndex].Cells[8].Controls[0]).Checked.ToString();
+      string authorName = ((TextBox)grid.Rows[e.RowIndex].FindControl("authorNameTextBox")).Text;
       // Execute the update command
-      bool success = CatalogAccess.UpdateProduct(id, name, description, price, thumbnail, image, promoDept, promoFront);
+      bool success = CatalogAccess.UpdateProduct(id, name, authorName, description, price, thumbnail, image, promoDept, promoFront);
       // Cancel edit mode
       grid.EditIndex = -1;
       // Display status message
@@ -83,8 +84,6 @@ public partial class AdminProducts : System.Web.UI.Page
     }
     catch
     {
-      // Display error
-      statusLabel.Text = "Грешка при обновяването на продукта";
     }
     // Reload grid
     BindGrid();
diff --git a/BookShop/App_Code/CatalogAccess.cs b/BookShop/App_Code/CatalogAccess.cs
index 534ab05..6ceac25 100644
--- a/BookShop/App_Code/CatalogAccess.cs
+++ b/BookShop/App_Code/CatalogAccess.cs
@@ -13,6 +13,14 @@ public struct DepartmentDetails
 }
 
 /// <summary>
+/// Wraps author details data
+/// </summary>
+public struct AuthorDetails
+{
+    public string Name;
+}
+
+/// <summary>
 /// Wraps category details data
 /// </summary>
 public struct CategoryDetails
@@ -35,6 +43,7 @@ public struct ProductDetails
   public string Image;
   public bool PromoFront;
   public bool PromoDept;
+  public string AuthorName;
 }
 
 /// <summary>
@@ -86,6 +95,35 @@ public static class CatalogAccess
     return details;
   }
 
+  // get department details
+  public static AuthorDetails GetAuthorDetails(string authorID)
+  {
+      if (authorID == null)
+      {
+          authorID = "1";
+      }
+      // get a configured DbCommand object
+      DbCommand comm = GenericDataAccess.CreateCommand();
+      // set the stored procedure name
+      comm.CommandText = "CatalogGetAuthorDetails";
+      // create a new parameter
+      DbParameter param = comm.CreateParameter();
+      param.ParameterName = "@AuthorID";
+      param.Value = authorID;
+      param.DbType = DbType.Int32;
+      comm.Parameters.Add(param);
+      // execute the stored procedure
+      DataTable table = GenericDataAccess.ExecuteSelectCommand(comm);
+      // wrap retrieved data into a DepartmentDetails object
+      AuthorDetails details = new AuthorDetails();      
+      if (table.Rows.Count > 0)
+      {
+          details.Name = table.Rows[0]["Name"].ToString();
+      }
+      // return department details
+      return details;
+  }
+
   // Get category details
   public static CategoryDetails GetCategoryDetails(string categoryId)
   {
@@ -138,14 +176,14 @@ public static class CatalogAccess
       DataRow dr = table.Rows[0];
       // get product details
       details.ProductID = int.Parse(productId);
-      details.Name = dr["Name"].ToString();
+      details.Name = dr["ProductName"].ToString();
       details.Description = dr["Description"].ToString();
       details.Price = Decimal.Parse(dr["Price"].ToString());
       details.Thumbnail = dr["Thumbnail"].ToString();
       details.Image = dr["Image"].ToString();
       details.PromoFront = bool.Parse(dr["PromoFront"].ToString());
-      details.PromoDept =
-  bool.Parse(dr["PromoDept"].ToString());
+      details.PromoDept =  bool.Parse(dr["PromoDept"].ToString());
+      details.AuthorName = dr["AuthorName"].ToString();
     }
     // return department details
     return details;
@@ -546,6 +584,37 @@ public static class CatalogAccess
     return (result != -1);
   }
 
+  // Create a new Category
+  public static bool CreateAuthor(string name)
+  {
+      // get a configured DbCommand object
+      DbCommand comm = GenericDataAccess.CreateCommand();
+      // set the stored procedure name
+      comm.CommandText = "CatalogCreateAuthor";
+      // create a new parameter
+      DbParameter param = comm.CreateParameter();
+      // create a new parameter
+      param = comm.CreateParameter();
+      param.ParameterName = "@AuthorName";
+      param.Value = name;
+      param.DbType = DbType.String;
+      param.Size = 50;
+      comm.Parameters.Add(param);
+      // result will represent the number of changed rows
+      int result = -1;
+      try
+      {
+          // execute the stored procedure
+          result = GenericDataAccess.ExecuteNonQuery(comm);
+      }
+      catch
+      {
+          throw;
+          // any errors are logged in GenericDataAccess, we ignore them here
+      }
+      // result will be 1 in case of success 
+      return (result != -1);
+  }
 
   // Update category details
   public static bool UpdateCategory(string id, string name, string description)
@@ -589,6 +658,40 @@ public static class CatalogAccess
     return (result != -1);
   }
 
+  // Update category details
+  public static bool UpdateAuthor(string id, string name)
+  {
+      // get a configured DbCommand object
+      DbCommand comm = GenericDataAccess.CreateCommand();
+      // set the stored procedure name
+      comm.CommandText = "CatalogUpdateAuthor";
+      // create a new parameter
+      DbParameter param = comm.CreateParameter();
+      param.ParameterName = "@AuthorId";
+      param.Value = id;
+      param.DbType = DbType.Int32;
+      comm.Parameters.Add(param);
+      // create a new parameter
+      param = comm.CreateParameter();
+      param.ParameterName = "@AuthorName";
+      param.Value = name;
+      param.DbType = DbType.String;
+      param.Size = 50;
+      comm.Parameters.Add(param);
+      // result will represent the number of changed rows
+      int result = -1;
+      try
+      {
+          // execute the stored procedure
+          result = GenericDataAccess.ExecuteNonQuery(comm);
+      }
+      catch
+      {
+          // any errors are logged in GenericDataAccess, we ignore them here
+      }
+      // result will be 1 in case of success 
+      return (result != -1);
+  }
 
   // Delete Category
   public static bool DeleteCategory(string id)
@@ -619,6 +722,34 @@ public static class CatalogAccess
     return (result != -1);
   }
 
+  public static bool DeleteAuthor(string id)
+  {
+      // get a configured DbCommand object
+      DbCommand comm = GenericDataAccess.CreateCommand();
+      // set the stored procedure name
+      comm.CommandText = "CatalogDeleteAuthor";
+      // create a new parameter
+      DbParameter param = comm.CreateParameter();
+      param.ParameterName = "@AuthorId";
+      param.Value = id;
+      param.DbType = DbType.Int32;
+      comm.Parameters.Add(param);
+      // execute the stored procedure; an error will be thrown by the
+      // database if the Category has related categories, in which case
+      // it is not deleted
+      int result = -1;
+      try
+      {
+          result = GenericDataAccess.ExecuteNonQuery(comm);
+      }
+      catch
+      {
+          // any errors are logged in GenericDataAccess, we ignore them here
+      }
+      // result will be 1 in case of success
+      return (result != -1);
+  }
+
   // retrieve the list of products in a category
   public static DataTable GetAllProductsInCategory(string categoryId)
   {
@@ -709,7 +840,7 @@ public static class CatalogAccess
   }
 
   // Update an existing product
-  public static bool UpdateProduct(string productId, string name, string description, string price, string Thumbnail, string Image, string PromoDept, string PromoFront)
+  public static bool UpdateProduct(string productId, string name, string authorName, string description, string price, string Thumbnail, string Image, string PromoDept, string PromoFront)
   {
     // get a configured DbCommand object
     DbCommand comm = GenericDataAccess.CreateCommand();
@@ -730,6 +861,13 @@ public static class CatalogAccess
     comm.Parameters.Add(param);
     // create a new parameter
     param = comm.CreateParameter();
+    param.ParameterName = "@AuthorName";
+    param.Value = name;
+    param.DbType = DbType.String;
+    param.Size = 50;
+    comm.Parameters.Add(param);
+    // create a new parameter
+    param = comm.CreateParameter();
     param.ParameterName = "@ProductDescription";
     param.Value = description;
     param.DbType = DbType.String;
@@ -775,6 +913,7 @@ public static class CatalogAccess
     }
     catch
     {
+        throw;
       // any errors are logged in GenericDataAccess, we ignore them here
     }
     // result will be 1 in case of success 
@@ -815,6 +954,17 @@ public static class CatalogAccess
     return GenericDataAccess.ExecuteSelectCommand(comm);
   }
 
+  // get categories that do not contain a specified product
+  public static DataTable GetAuthors()
+  {
+      // get a configured DbCommand object
+      DbCommand comm = GenericDataAccess.CreateCommand();
+      // set the stored procedure name
+      comm.CommandText = "CatalogGetAuthors";
+      // execute the stored procedure
+      return GenericDataAccess.ExecuteSelectCommand(comm);
+  }
+
   // assign a product to a new category
   public static bool AssignProductToCategory(string productId, string categoryId)
   {
@@ -1032,4 +1182,5 @@ public static class CatalogAccess
       return false;
     }
   }
+
 }
\ No newline at end of file
diff --git a/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh b/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh
deleted file mode 100644
index d51ae3e..0000000
Binary files a/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh and /dev/null differ
diff --git a/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh~ b/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh~
deleted file mode 100644
index a08aa36..0000000
Binary files a/BookShop/Bin/Intelligencia.UrlRewriter.dll.refresh~ and /dev/null differ
diff --git a/BookShop/Bin/UrlRewritingNet.UrlRewriter.dll b/BookShop/Bin/UrlRewritingNet.UrlRewriter.dll
new file mode 100644
index 0000000..3cb5c39
Binary files /dev/null and b/BookShop/Bin/UrlRewritingNet.UrlRewriter.dll differ
diff --git a/BookShop/Bin/UrlRewritingNet_20/UrlRewritingNet.UrlRewriter.dll b/BookShop/Bin/UrlRewritingNet_20/UrlRewritingNet.UrlRewriter.dll
new file mode 100644
index 0000000..3cb5c39
Binary files /dev/null and b/BookShop/Bin/UrlRewritingNet_20/UrlRewritingNet.UrlRewriter.dll differ
diff --git a/BookShop/Checkout.aspx b/BookShop/Checkout.aspx
index cdbedf2..37a6cf4 100644
--- a/BookShop/Checkout.aspx
+++ b/BookShop/Checkout.aspx
@@ -21,8 +21,8 @@ Src="UserControls/CustomerDetailsEdit.ascx" %>
         SortExpression="Price" />
       <asp:BoundField DataField="Quantity" HeaderText="Количество"
        ReadOnly="True" SortExpression="Quantity" />
-      <asp:BoundField DataField="Подсума" ReadOnly="True" 
-        DataFormatString="{0:c}" HeaderText="Subtotal"
+      <asp:BoundField DataField="Subtotal" ReadOnly="True" 
+        DataFormatString="{0:c}" HeaderText="Подсума"
         SortExpression="Subtotal" />
     </Columns>
   </asp:GridView>
diff --git a/BookShop/Images/open_book.jpg b/BookShop/Images/open_book.jpg
new file mode 100644
index 0000000..8b7b80d
Binary files /dev/null and b/BookShop/Images/open_book.jpg differ
diff --git a/BookShop/Product.aspx b/BookShop/Product.aspx
index b103a31..38efbfb 100644
--- a/BookShop/Product.aspx
+++ b/BookShop/Product.aspx
@@ -12,6 +12,10 @@
     <asp:Label CssClass="CatalogTitle" ID="titleLabel" runat="server" Text="Етикет"></asp:Label>
   </p>
   <p>
+  <b>Автор:</b>
+  <asp:Label CssClass="ProductAuthor" ID="authorLabel" runat="server" Text="Етикет"></asp:Label>
+  </p>
+  <p>
     <asp:Image ID="productImage" runat="server" />
   </p>
   <p>
diff --git a/BookShop/Product.aspx.cs b/BookShop/Product.aspx.cs
index 32f8fe5..1fc3c3f 100644
--- a/BookShop/Product.aspx.cs
+++ b/BookShop/Product.aspx.cs
@@ -37,6 +37,7 @@ public partial class Product : System.Web.UI.Page
     titleLabel.Text = pd.Name;
     descriptionLabel.Text = pd.Description;
     priceLabel.Text = String.Format("{0:c}", pd.Price);
+    authorLabel.Text = pd.AuthorName;
     productImage.ImageUrl = Link.ToProductImage(pd.Image);
     // Set the title of the page
     this.Title = BookShopConfiguration.SiteName + ": " + pd.Name;
diff --git a/BookShop/ProductImages/1.jpg b/BookShop/ProductImages/1.jpg
new file mode 100644
index 0000000..dd14b49
Binary files /dev/null and b/BookShop/ProductImages/1.jpg differ
diff --git a/BookShop/ProductImages/16.jpg b/BookShop/ProductImages/16.jpg
new file mode 100644
index 0000000..068a2fe
Binary files /dev/null and b/BookShop/ProductImages/16.jpg differ
diff --git a/BookShop/ProductImages/2.jpg b/BookShop/ProductImages/2.jpg
new file mode 100644
index 0000000..37ee12d
Binary files /dev/null and b/BookShop/ProductImages/2.jpg differ
diff --git a/BookShop/ProductImages/22.jpg b/BookShop/ProductImages/22.jpg
new file mode 100644
index 0000000..818722e
Binary files /dev/null and b/BookShop/ProductImages/22.jpg differ
diff --git a/BookShop/ProductImages/29.jpg b/BookShop/ProductImages/29.jpg
new file mode 100644
index 0000000..99be496
Binary files /dev/null and b/BookShop/ProductImages/29.jpg differ
diff --git a/BookShop/ProductImages/3.jpg b/BookShop/ProductImages/3.jpg
new file mode 100644
index 0000000..84ea81d
Binary files /dev/null and b/BookShop/ProductImages/3.jpg differ
diff --git a/BookShop/ProductImages/34.jpg b/BookShop/ProductImages/34.jpg
new file mode 100644
index 0000000..a5dbe51
Binary files /dev/null and b/BookShop/ProductImages/34.jpg differ
diff --git a/BookShop/ProductImages/37.jpg b/BookShop/ProductImages/37.jpg
new file mode 100644
index 0000000..67f06bc
Binary files /dev/null and b/BookShop/ProductImages/37.jpg differ
diff --git a/BookShop/ProductImages/4.jpg b/BookShop/ProductImages/4.jpg
new file mode 100644
index 0000000..7369be1
Binary files /dev/null and b/BookShop/ProductImages/4.jpg differ
diff --git a/BookShop/ProductImages/40.jpg b/BookShop/ProductImages/40.jpg
new file mode 100644
index 0000000..8260bd9
Binary files /dev/null and b/BookShop/ProductImages/40.jpg differ
diff --git a/BookShop/ProductImages/5.jpg b/BookShop/ProductImages/5.jpg
new file mode 100644
index 0000000..2e761f3
Binary files /dev/null and b/BookShop/ProductImages/5.jpg differ
diff --git a/BookShop/ProductImages/6.jpg b/BookShop/ProductImages/6.jpg
new file mode 100644
index 0000000..6dfeaec
Binary files /dev/null and b/BookShop/ProductImages/6.jpg differ
diff --git a/BookShop/ProductImages/7.jpg b/BookShop/ProductImages/7.jpg
new file mode 100644
index 0000000..80ce929
Binary files /dev/null and b/BookShop/ProductImages/7.jpg differ
diff --git a/BookShop/ProductImages/8.jpg b/BookShop/ProductImages/8.jpg
new file mode 100644
index 0000000..26eba0e
Binary files /dev/null and b/BookShop/ProductImages/8.jpg differ
diff --git a/BookShop/ProductImages/9.jpg b/BookShop/ProductImages/9.jpg
new file mode 100644
index 0000000..495ddbe
Binary files /dev/null and b/BookShop/ProductImages/9.jpg differ
diff --git a/BookShop/UserControls/ProductsList.ascx b/BookShop/UserControls/ProductsList.ascx
index cf43e2e..642f92a 100644
--- a/BookShop/UserControls/ProductsList.ascx
+++ b/BookShop/UserControls/ProductsList.ascx
@@ -9,12 +9,15 @@
         <%# HttpUtility.HtmlEncode(Eval("Name").ToString()) %>
       </a>
     </h3>
+    <p>
+    <b>Автор: <%# HttpUtility.HtmlEncode(Eval("AuthorName").ToString()) %> </b>
+    </p>
     <a href="<%# Link.ToProduct(Eval("ProductID").ToString()) %>">
       <img width="100" src="<%# Link.ToProductImage(Eval("Thumbnail").ToString()) %>" border="0" alt='<%# HttpUtility.HtmlEncode(Eval("Name").ToString())%>' />
     </a>
     <%# HttpUtility.HtmlEncode(Eval("Description").ToString()) %>
     <p class="DetailSection">
-      Price:
+      Цена:
       <%# Eval("Price", "{0:c}") %>
     </p>
     <asp:PlaceHolder ID="attrPlaceHolder" runat="server"></asp:PlaceHolder>
diff --git a/BookShop/UserControls/UserInfo.ascx b/BookShop/UserControls/UserInfo.ascx
index 50e104f..333b6c1 100644
--- a/BookShop/UserControls/UserInfo.ascx
+++ b/BookShop/UserControls/UserInfo.ascx
@@ -36,6 +36,8 @@
               <a href="AdminShoppingCart.aspx">Администрация колички</a>
               <br />
               <a href="AdminOrders.aspx">Администрация поръчки</a>
+              <br />
+              <a href="AdminAuthors.aspx">Администрация автори</a>
             </td>
           </tr>          
         </ContentTemplate>
diff --git a/BookShop/web.config b/BookShop/web.config
index 7b53cc3..55f08c7 100644
--- a/BookShop/web.config
+++ b/BookShop/web.config
@@ -183,7 +183,7 @@
 			</properties>
 		</profile>
 		<roleManager enabled="true"/>
-		<globalization requestEncoding="utf-8" responseEncoding="utf-8" fileEncoding="utf-8" culture="en-US"/>
+		<globalization requestEncoding="utf-8" responseEncoding="utf-8" fileEncoding="utf-8" culture="bg-BG"/>
 		<!-- 
             Set compilation debug="true" to insert debugging 
             symbols into the compiled page. Because this 
diff --git a/Database/05_07_stored_procedures.sql b/Database/05_07_stored_procedures.sql
index 08ebf48..3e6e335 100644
--- a/Database/05_07_stored_procedures.sql
+++ b/Database/05_07_stored_procedures.sql
@@ -19,13 +19,27 @@ WHERE CategoryID = @CategoryID
 
 GO
 
+CREATE PROCEDURE CatalogGetAuthorDetails
+(@AuthorID INT)
+AS
+SELECT AuthorID, Name
+FROM Author
+WHERE AuthorID = @AuthorID
+
+GO
+
+DROP  PROCEDURE CatalogGetProductDetails
+GO
 CREATE PROCEDURE CatalogGetProductDetails
 (@ProductID INT)
 AS
-SELECT Name, Description, Price, Thumbnail, Image, PromoFront, PromoDept
+SELECT Product.Name AS ProductName, Description, Price, Thumbnail, Image, PromoFront, PromoDept, Author.Name AS AuthorName
 FROM Product
+INNER JOIN
+Author ON Product.AuthorID = Author.AuthorID
 WHERE ProductID = @ProductID
 
+EXECUTE CatalogGetProductDetails 1
 GO
 
 CREATE PROCEDURE CatalogGetCategoriesInDepartment
@@ -37,6 +51,13 @@ WHERE DepartmentID = @DepartmentID
 
 GO
 
+CREATE PROCEDURE CatalogGetAuthors
+AS
+SELECT AuthorId, Name
+FROM Author
+
+DROP PROCEDURE CatalogGetProductsOnFrontPromo
+
 CREATE PROCEDURE CatalogGetProductsOnFrontPromo
 (@DescriptionLength INT,
 @PageNumber INT,
@@ -49,6 +70,7 @@ DECLARE @Products TABLE
 (RowNumber INT,
  ProductID INT,
  Name NVARCHAR(50),
+ AuthorName NVARCHAR(50),
  Description NVARCHAR(MAX),
  Price MONEY,
  Thumbnail NVARCHAR(50),
@@ -60,24 +82,26 @@ DECLARE @Products TABLE
 -- populate the table variable with the complete list of products
 INSERT INTO @Products
 SELECT ROW_NUMBER() OVER (ORDER BY Product.ProductID),
-       ProductID, Name,
+       ProductID, Product.Name AS Name, Author.Name AS AuthorName,
        CASE WHEN LEN(Description) <= @DescriptionLength THEN Description 
             ELSE SUBSTRING(Description, 1, @DescriptionLength) + '...' END 
        AS Description, Price, Thumbnail, Image, PromoFront, PromoDept
 FROM Product
+INNER JOIN Author ON Author.AuthorID = Product.AuthorID
 WHERE PromoFront = 1
 
 -- return the total number of products using an OUTPUT variable
 SELECT @HowManyProducts = COUNT(ProductID) FROM @Products
 
 -- extract the requested page of products
-SELECT ProductID, Name, Description, Price, Thumbnail,
+SELECT ProductID, Name, AuthorName, Description, Price, Thumbnail,
        Image, PromoFront, PromoDept
 FROM @Products
 WHERE RowNumber > (@PageNumber - 1) * @ProductsPerPage
   AND RowNumber <= @PageNumber * @ProductsPerPage
 
 GO
+DROP  PROCEDURE CatalogGetProductsInCategory
 
 CREATE PROCEDURE CatalogGetProductsInCategory
 (@CategoryID INT,
@@ -92,6 +116,7 @@ DECLARE @Products TABLE
 (RowNumber INT,
  ProductID INT,
  Name NVARCHAR(50),
+ AuthorName NVARCHAR(50),
  Description NVARCHAR(MAX),
  Price MONEY,
  Thumbnail NVARCHAR(50),
@@ -103,19 +128,21 @@ DECLARE @Products TABLE
 -- populate the table variable with the complete list of products
 INSERT INTO @Products
 SELECT ROW_NUMBER() OVER (ORDER BY Product.ProductID),
-       Product.ProductID, Name,
+       Product.ProductID, Product.Name AS Name, Author.Name AS AuthorName,
        CASE WHEN LEN(Description) <= @DescriptionLength THEN Description 
             ELSE SUBSTRING(Description, 1, @DescriptionLength) + '...' END 
        AS Description, Price, Thumbnail, Image, PromoFront, PromoDept 
 FROM Product INNER JOIN ProductCategory
   ON Product.ProductID = ProductCategory.ProductID
+  INNER JOIN Author
+  ON Product.AuthorID = Author.AuthorID
 WHERE ProductCategory.CategoryID = @CategoryID
 
 -- return the total number of products using an OUTPUT variable
 SELECT @HowManyProducts = COUNT(ProductID) FROM @Products
 
 -- extract the requested page of products
-SELECT ProductID, Name, Description, Price, Thumbnail,
+SELECT ProductID, Name, AuthorName, Description, Price, Thumbnail,
        Image, PromoFront, PromoDept
 FROM @Products
 WHERE RowNumber > (@PageNumber - 1) * @ProductsPerPage
@@ -124,6 +151,10 @@ WHERE RowNumber > (@PageNumber - 1) * @ProductsPerPage
 
 GO
 
+DROP PROCEDURE CatalogGetProductsOnDeptPromo
+
+GO
+
 CREATE PROCEDURE CatalogGetProductsOnDeptPromo
 (@DepartmentID INT,
 @DescriptionLength INT,
@@ -137,6 +168,7 @@ DECLARE @Products TABLE
 (RowNumber INT,
  ProductID INT,
  Name NVARCHAR(50),
+ AuthorName NVARCHAR(50),
  Description NVARCHAR(MAX),
  Price MONEY,
  Thumbnail NVARCHAR(50),
@@ -147,11 +179,11 @@ DECLARE @Products TABLE
 -- populate the table variable with the complete list of products
 INSERT INTO @Products
 SELECT ROW_NUMBER() OVER (ORDER BY ProductID) AS Row,
-       ProductID, Name, SUBSTRING(Description, 1, @DescriptionLength)
-+ '...' AS Description,
+       ProductID, Name, AuthorName,
+       SUBSTRING(Description, 1, @DescriptionLength) + '...' AS Description,
        Price, Thumbnail, Image, PromoFront, PromoDept
 FROM
-(SELECT DISTINCT Product.ProductID, Product.Name,
+(SELECT DISTINCT Product.ProductID, Product.Name AS Name, Author.Name AS AuthorName,
        CASE WHEN LEN(Product.Description) <= @DescriptionLength 
             THEN Product.Description 
             ELSE SUBSTRING(Product.Description, 1, @DescriptionLength) + '...' END 
@@ -160,6 +192,8 @@ FROM
                       ON Product.ProductID = ProductCategory.ProductID
               INNER JOIN Category
                       ON ProductCategory.CategoryID = Category.CategoryID
+              INNER JOIN Author
+					  ON Product.AuthorID = Author.AuthorID
   WHERE Product.PromoDept = 1
    AND Category.DepartmentID = @DepartmentID
 ) AS ProductOnDepPr
@@ -168,7 +202,7 @@ FROM
 SELECT @HowManyProducts = COUNT(ProductID) FROM @Products
 
 -- extract the requested page of products
-SELECT ProductID, Name, Description, Price, Thumbnail,
+SELECT ProductID, Name, AuthorName, Description, Price, Thumbnail,
        Image, PromoFront, PromoDept
 FROM @Products
 WHERE RowNumber > (@PageNumber - 1) * @ProductsPerPage
diff --git a/Database/11_stored_procedures.sql b/Database/11_stored_procedures.sql
index ec6fc33..39f8fff 100644
--- a/Database/11_stored_procedures.sql
+++ b/Database/11_stored_procedures.sql
@@ -30,6 +30,14 @@ WHERE DepartmentID = @DepartmentID
 
 GO
 
+CREATE PROCEDURE CatalogDeleteAuthor
+(@AuthorID int)
+AS
+DELETE FROM Author
+WHERE AuthorID = @AuthorID
+
+GO
+
 CREATE PROCEDURE CatalogCreateCategory
 (@DepartmentID int,
 @CategoryName nvarchar(50),
@@ -51,6 +59,17 @@ WHERE CategoryID = @CategoryID
 
 GO
 
+CREATE PROCEDURE CatalogUpdateAuthor
+(@AuthorID int,
+@AuthorName nvarchar(50))
+AS
+UPDATE Author
+SET Name = @AuthorName
+WHERE AuthorID = @AuthorID
+
+GO
+
+
 CREATE PROCEDURE CatalogDeleteCategory
 (@CategoryID int)
 AS
diff --git a/Database/12_stored_procedures.sql b/Database/12_stored_procedures.sql
index a078d42..1ccd271 100644
--- a/Database/12_stored_procedures.sql
+++ b/Database/12_stored_procedures.sql
@@ -2,13 +2,18 @@ USE BookShop
 
 GO
 
+GO
+DROP PROCEDURE CatalogGetAllProductsInCategory
+
 CREATE PROCEDURE CatalogGetAllProductsInCategory
 (@CategoryID INT)
 AS
-SELECT Product.ProductID, Name, Description, Price, Thumbnail, 
+SELECT Product.ProductID, Product.Name AS Name, Author.Name AS AuthorName, Description, Price, Thumbnail, 
        Image, PromoDept, PromoFront
 FROM Product INNER JOIN ProductCategory
   ON Product.ProductID = ProductCategory.ProductID
+  INNER JOIN Author
+  ON Author.AuthorID = Product.AuthorID
 WHERE ProductCategory.CategoryID = @CategoryID
 
 GO
@@ -50,10 +55,13 @@ INSERT INTO ProductCategory (ProductID, CategoryID)
 VALUES (@ProductID, @CategoryID)
 
 GO
+DROP PROCEDURE CatalogUpdateProduct
 
+GO
 CREATE PROCEDURE CatalogUpdateProduct
 (@ProductID INT,
  @ProductName VARCHAR(50),
+ @AuthorName VARCHAR(50),
  @ProductDescription VARCHAR(5000),
  @Price MONEY,
  @Thumbnail VARCHAR(50),
@@ -68,7 +76,8 @@ SET Name = @ProductName,
     Thumbnail = @Thumbnail,
     Image = @Image,
     PromoFront = @PromoFront,
-    PromoDept = @PromoDept
+    PromoDept = @PromoDept,
+    AuthorID = (SELECT AuthorID FROM Author WHERE Name=@AuthorName)
 WHERE ProductID = @ProductID
 
 GO
diff --git a/Database/21_all_code.sql b/Database/21_all_code.sql
index 8e52418..a6cddf6 100644
--- a/Database/21_all_code.sql
+++ b/Database/21_all_code.sql
@@ -34,3 +34,12 @@ INSERT INTO Review (CustomerID, ProductID, Review, Rating, DateCreated)
    VALUES (@CustomerId, @ProductId, @Review, @Rating, GETDATE())
 GO
 
+DROP PROCEDURE CatalogCreateAuthor
+
+-- Create CatalogCreateAuthor stored procedure
+CREATE PROCEDURE CatalogCreateAuthor
+(@AuthorName TEXT)
+AS
+INSERT INTO Author (Name)
+   VALUES (@AuthorName)
+GO
diff --git a/translate_user_info.patch b/translate_user_info.patch
new file mode 100644
index 0000000..78f0f4c
--- /dev/null
+++ b/translate_user_info.patch
@@ -0,0 +1,66 @@
+diff --git a/BookShop/UserControls/UserInfo.ascx b/BookShop/UserControls/UserInfo.ascx
+index b4df46c..e4cc0ed 100644
+--- a/BookShop/UserControls/UserInfo.ascx
++++ b/BookShop/UserControls/UserInfo.ascx
+@@ -3,17 +3,17 @@
+   <asp:LoginView ID="LoginView1" runat="server">
+     <AnonymousTemplate>
+       <tr>
+-        <td class="UserInfoHead">Welcome!</td>
++        <td class="UserInfoHead">Добре дошли!</td>
+       </tr>    
+       <tr>
+         <td class="UserInfoContent">
+-          You are not logged in.
++          Не сте влезли.
+           <br />
+-          <asp:LoginStatus ID="LoginStatus1" runat="server" />
+-          or
++          <asp:LoginStatus ID="LoginStatus1" runat="server" LoginText="Вход" />
++          или
+           <asp:HyperLink runat="server" ID="registerLink"
+-            NavigateUrl="~/Register.aspx" Text="Register"
+-            ToolTip="Go to the registration page"/>
++            NavigateUrl="~/Register.aspx" Text="регистрация"
++            ToolTip="Go to the registration page"/>.
+         </td>
+       </tr>
+     </AnonymousTemplate>
+@@ -29,13 +29,13 @@
+             <td class="UserInfoContent">              
+               <asp:LoginStatus ID="LoginStatus2" runat="server" />
+               <br />
+-              <a href="/">BookShop</a>   
++              <a href="/">Магазин за книги</a>   
+               <br />
+-              <a href="AdminDepartments.aspx">Catalog Admin</a>
++              <a href="AdminDepartments.aspx">Администрация каталог</a>
+               <br />
+-              <a href="AdminShoppingCart.aspx">Cart Admin</a>
++              <a href="AdminShoppingCart.aspx">Администрация колички</a>
+               <br />
+-              <a href="AdminOrders.aspx">Orders Admin</a>
++              <a href="AdminOrders.aspx">Администрация поръчки</a>
+             </td>
+           </tr>          
+         </ContentTemplate>
+@@ -44,7 +44,7 @@
+         <ContentTemplate>
+           <tr>
+             <td class="UserInfoHead">
+-              <asp:LoginName ID="LoginName2" runat="server" FormatString="Hello, <b>{0}</b>!" />
++              <asp:LoginName ID="LoginName2" runat="server" FormatString="Здравейте, <b>{0}</b>!" />
+             </td>
+           </tr>            
+           <tr>
+@@ -53,8 +53,8 @@
+               <br />
+               <asp:HyperLink runat="server" ID="detailsLink"
+                 NavigateUrl="~/CustomerDetails.aspx"
+-                Text="Edit Details"
+-                ToolTip="Edit your personal details" />
++                Text="Редактиране на детайли"
++                ToolTip="Редатирайте личните си детайли" />
+           </td>
+         </ContentTemplate>
+       </asp:RoleGroup>
