def reduce(dyad, seq, init = None):
	if list==[]:
		print(init)
		return init
	if init==None:
		current=dyad(seq[0], seq[1])
		index=2
	if init != None:
		current=dyad(init, seq[0])
		index=1
	for i in range(index,len(seq)):
		current=dyad(current, seq[i])
	print(current)
	return current

reduce(lambda x, y: x + y, [1,2,3,4,5])

def groupby(function, seq):
	tmp={}
	for i in seq:
		tmp[function(i)]=[]
	for i in seq:
		tmp[function(i)]+=[i]
	print(tmp)
	return tmp


groupby(lambda x: 'odd' if x%2 else 'even', [1, 2, 3, 4, 5, 6, 7, 8, 9])
groupby(len, ['spam', 'parrot', 'eggs', 'cheese', 'inquisition'])



def construct(functions, *args):
	l=[]
	for arg in args:
		for function in fubctions:
			l+=function(arg)
	print (str(a))

		
construct([abs, chr, str, lambda _: 'spam'], 42)






#def curry(function, *args, **kwargs):




#def compose(func, *functions):



